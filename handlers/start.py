from sqlalchemy.orm import Session
from telebot import types, TeleBot
from db.handlers import create_user, get_user
from db.connect import engine

def handle_start_message(bot: TeleBot, chat_id: int):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton('–ù–∞ –≥–ª–∞–≤–Ω—É—é')
    markup.add(item1)
    bot.send_message(chat_id, "–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª–∏—Å—å –∫ –Ω–∞–º! üéâ", reply_markup=markup)
    
    
    markup = types.InlineKeyboardMarkup()
    button1 = types.InlineKeyboardButton("–û –ø—Ä–æ–µ–∫—Ç–µ",callback_data="about_project")
    button2 = types.InlineKeyboardButton("–ó–∞–ø–∏—Å—å –Ω–∞ –∏–≥—Ä—É",callback_data="sign_for_game")
    button3 = types.InlineKeyboardButton("–ü–æ–¥–ø–∏—Å–∫–∞",callback_data="subscribe")
    button4 = types.InlineKeyboardButton("–ú–µ–¥–∏–∞ –∫–∞–Ω–∞–ª—ã",callback_data="media_channels")
    button5 = types.InlineKeyboardButton("–ù–∞—à–∏ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è", callback_data="our_events")   
    button6 = types.InlineKeyboardButton("–ù–∞—à–∏ –ø—Ä–æ–¥—É–∫—Ç—ã", callback_data="our_products")   
    
    markup.add(button1, button2, button3, button6, button5, button4, row_width=2)
    button8 = types.InlineKeyboardButton("–í–æ–ø—Ä–æ—Å—ã –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞", callback_data="support")   
    button7 = types.InlineKeyboardButton("–†–µ—Ñ–µ—Ä–∞–ª–∫–∞ –∏ –±–∞–ª–∞–Ω—Å", callback_data="ref_program")   

    markup.add(button7, button8, row_width=1)
    bot.send_message(chat_id, "–ü—Ä–æ–µ–∫—Ç '–ó–∞ –ª—é–±–æ–≤—å' ‚Äî —ç—Ç–æ –¥–≤–∏–∂–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –æ–±—ä–µ–¥–∏–Ω—è–µ—Ç –ª—é–¥–µ–π, —Å—Ç—Ä–µ–º—è—â–∏—Ö—Å—è –∫ –æ—Å–æ–∑–Ω–∞–Ω–Ω—ã–º –æ—Ç–Ω–æ—à–µ–Ω–∏—è–º, –ª–∏—á–Ω–æ—Å—Ç–Ω–æ–º—É —Ä–æ—Å—Ç—É –∏ –≤–¥–æ—Ö–Ω–æ–≤–ª—è—é—â–µ–º—É —Å–æ–æ–±—â–µ—Å—Ç–≤—É.\n\n–ß–µ—Ä–µ–∑ –Ω–∞—à–∏ –∏–≥—Ä—ã, –∫—É—Ä—Å—ã, –∫–ª—É–±—ã –∑–Ω–∞–∫–æ–º—Å—Ç–≤ –∏ –ø–∞—Ä—Ç–Ω–µ—Ä—Å–∫—É—é –ø—Ä–æ–≥—Ä–∞–º–º—É –≤—ã –Ω–∞–π–¥–µ—Ç–µ –Ω–æ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –¥–ª—è —Å—á–∞—Å—Ç—å—è –∏ —É—Å–ø–µ—Ö–∞. –í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ:", reply_markup=markup)
    
    


def handler_start(bot: TeleBot, message: types.Message):
    with Session(engine) as session:
        user = get_user(session, message.from_user.id)
        
        if user and user.has_ended:            
            handle_start_message(bot, message.chat.id)
        else:
            if not user:
                ref = 1
                if " " in message.text:
                    referrer_candidate = message.text.split()[1]
                    
                    # –ü—Ä–æ–±—É–µ–º –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å —Å—Ç—Ä–æ–∫—É –≤ —á–∏—Å–ª–æ
                    try:
                        referrer_candidate = int(referrer_candidate)

                        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –Ω–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ TG ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è TG ID —Ä–µ—Ñ–µ—Ä–µ—Ä–∞
                        if message.from_user.id != referrer_candidate: 
                            ref = referrer_candidate
                    except ValueError:
                        pass
                user = create_user(
                    session, 
                    message.chat.id, 
                    message.from_user.full_name, 
                    message.from_user.username, 
                    ref)
            
            if user.city == "":
                bot.send_message(message.chat.id, """
–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∏—Ä '–ó–∞ –ª—é–±–æ–≤—å'! üåü \n\n–ú—ã —Å–æ–∑–¥–∞–ª–∏ —É–Ω–∏–∫–∞–ª—å–Ω—É—é —ç–∫–æ—Å–∏—Å—Ç–µ–º—É, —á—Ç–æ–±—ã –ø–æ–º–æ—á—å –≤–∞–º —Å—Ç—Ä–æ–∏—Ç—å –≥–∞—Ä–º–æ–Ω–∏—á–Ω—ã–µ –æ—Ç–Ω–æ—à–µ–Ω–∏—è, –Ω–∞—Ö–æ–¥–∏—Ç—å –µ–¥–∏–Ω–æ–º—ã—à–ª–µ–Ω–Ω–∏–∫–æ–≤ –∏ —Ä–∞—Å–∫—Ä—ã–≤–∞—Ç—å —Å–≤–æ–π –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª. –ß—Ç–æ–±—ã –º—ã –º–æ–≥–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –≤–∞–º —Å–∞–º—ã–µ –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è, –∏–≥—Ä—ã –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –≤ –≤–∞—à–µ–º —Ä–µ–≥–∏–æ–Ω–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –≤–∞—à –≥–æ—Ä–æ–¥ –∏ –ø–æ–¥–µ–ª–∏—Ç–µ—Å—å –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞, –ø—Ä–∏–≤—è–∑–∞–Ω–Ω—ã–º –∫ Telegram. –≠—Ç–æ –∑–∞–π–º–µ—Ç –≤—Å–µ–≥–æ –º–∏–Ω—É—Ç—É!""")
                msg = bot.send_message(message.chat.id, "–ò–∑ –∫–∞–∫–æ–≥–æ –≤—ã –≥–æ—Ä–æ–¥–∞?")
                bot.register_next_step_handler(msg, handler_city, bot)
            elif user.phone == "":
                keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
                reg_button = types.KeyboardButton(text="–û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞", 
                request_contact=True)
                keyboard.add(reg_button)
                bot.send_message(message.chat.id, "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –ø–æ –∫–Ω–æ–ø–∫–µ –Ω–∏–∂–µ", reply_markup=keyboard)
                bot.register_next_step_handler(message, handle_phone, bot)
                
            
def handler_city(message: types.Message, bot: TeleBot):
    if message.text.startswith("/") or len(message.text) < 3:
        bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≥–æ—Ä–æ–¥")
        bot.register_next_step_handler(message, handler_city, bot)
    else:
        with Session(engine) as session:
            user = get_user(session, message.chat.id)
            user.city = message.text
            session.commit()
            
            keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
            reg_button = types.KeyboardButton(text="–û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞", 
            request_contact=True)
            keyboard.add(reg_button)
            bot.send_message(message.chat.id, "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –ø–æ –∫–Ω–æ–ø–∫–µ –Ω–∏–∂–µ", reply_markup=keyboard)
            bot.register_next_step_handler(message, handle_phone, bot)

def handle_phone(message: types.Message, bot: TeleBot):
    try:
        phone_number = message.contact.phone_number
        if phone_number:
            with Session(engine) as session:
                user = get_user(session, message.chat.id)
                user.phone = str(phone_number)
                user.has_ended = True
                session.commit()
                handle_start_message(bot, message.chat.id)
    except:
        bot.send_message(message.chat.id, "–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –Ω–µ –ø–æ–ª—É—á–µ–Ω")
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
        reg_button = types.KeyboardButton(text="–û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞", 
        request_contact=True)
        keyboard.add(reg_button)
        bot.send_message(message.chat.id, "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –ø–æ –∫–Ω–æ–ø–∫–µ –Ω–∏–∂–µ", reply_markup=keyboard)
        bot.register_next_step_handler(message, handle_phone, bot)